import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";
import useAuth from "../hooks/useAuth";
interface Inputs {
  email: string;
  password: string;
}

const Login = () => {
  const [login, setlogin] = useState(false);
  const { signIn, signUp } = useAuth();

  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>();

  const onSubmit: SubmitHandler<Inputs> = async (data) => {
    console.log(data);
    if (login) {
      await signIn(data.email, data.password);
    } else {
      await signUp(data.email, data.password);
    }
  };

  return (
    <div className="relative flex h-screen w-screen flex-col items-center justify-center md:bg-transparent">
      <Head>
        <title>Home - Netflix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Image
        src="https://rb.gy/p2hphi"
        layout="fill"
        className="-z-10  opacity-60 sm:!inline"
        objectFit="cover"
        alt="bg cover"
      />
      <Link href="/">
        <img
          src="https://rb.gy/ulxxee"
          className="absolute left-4 top-4 cursor-pointer object-contain md:left-10 md:top-6"
          width={150}
          height={150}
          alt="Logo"
        />
      </Link>

      <form
        className="relative mt-24 space-y-8 rounded bg-black/75 py-10 px-6 md:mt-0 md:max-w-md md:px-14"
        onSubmit={handleSubmit(onSubmit)}
      >
        <h1 className="text-4xl font-semibold font-Jost">Sign In</h1>
        <div className="space-y-4">
          <label
            htmlFor=""
            className="inline-block w-full font-Jost font-semibold"
          >
            <input
              type="email"
              placeholder="Email"
              className={`input ${errors.email && "border-b-2 border-red-500"}`}
              {...register("email", { required: true })}
            />
            {errors.email && (
              <p className="p-1 text-sm font-semibold font-Jost text-red-500">
                Please enter a valid email
              </p>
            )}
          </label>
          <label
            htmlFor=""
            className="inline-block w-full font-Jost font-semibold  "
          >
            <input
              type="password"
              placeholder="Password"
              className={`input ${
                errors.password && "border-b-2 border-red-500"
              }`}
              {...register("password", { required: true })}
            />
            {errors.password && (
              <p className="p-1 text-sm font-semibold font-Jost text-red-500">
                Your password must contain between 4 and 30 characters.
              </p>
            )}
          </label>
        </div>

        <button
          className="w-full rounded bg-[#e50914] py-3 font-semibold font-Jost"
          onClick={() => setlogin(true)}
        >
          Sign In
        </button>

        <div className="text-[gray] font-Jost font-semibold">
          New To Netflix?{" "}
          <button
            className="text-white hover:underline "
            onClick={() => setlogin(false)}
          >
            Sign Up Now
          </button>
        </div>
      </form>
    </div>
  );
};

export default Login;
